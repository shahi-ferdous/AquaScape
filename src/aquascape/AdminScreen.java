/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aquascape;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shahi
 */
public class AdminScreen extends javax.swing.JFrame {

    /**
     * Creates new form AdminScreen
     */
    public AdminScreen() {
        initComponents();
        DbConnect db = new DbConnect();
        DefaultTableModel tmodel = (DefaultTableModel) fishes.getModel();
        DefaultTableModel tmode2 = (DefaultTableModel) plants.getModel();
        DefaultTableModel tmode3 = (DefaultTableModel) filters.getModel();
        Object[] rowData = new Object[3];
        ArrayList result = new ArrayList();
        try {
            result=db.getFishResult("select fish, water, price from fish");
            System.out.println(result);
            int i=0;
            while(i<result.size()){
               rowData[0]=result.get(i++);
               rowData[1]=result.get(i++);
               rowData[2]=result.get(i++);
               
               tmodel.addRow(rowData);
            }
            
           result=db.getPlantResult("select * from plants");
            System.out.println(result);
            i=0;
            while(i<result.size()){
               rowData[0]=result.get(i++);
               rowData[1]=result.get(i++);
               rowData[2]=result.get(i++);
               
               tmode2.addRow(rowData);
            }
            
            
            result=db.getFilterResult("select * from filters");
            System.out.println(result);
            i=0;
            while(i<result.size()){
               rowData[0]=result.get(i++);
               rowData[1]=result.get(i++);
               rowData[2]=result.get(i++);
               
               tmode3.addRow(rowData);
            }
            
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        messageLog = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        plants = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        filters = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        fishes = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        fishName = new javax.swing.JTextField();
        fishReq = new javax.swing.JTextField();
        fishPrice = new javax.swing.JTextField();
        fishAdd = new javax.swing.JButton();
        fishUpdate = new javax.swing.JButton();
        fishDelete = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        plantAdd = new javax.swing.JButton();
        plantUpdate = new javax.swing.JButton();
        plantDelete = new javax.swing.JButton();
        plantName = new javax.swing.JTextField();
        plantMain = new javax.swing.JTextField();
        plantPrice = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        filterName = new javax.swing.JTextField();
        filterCapacity = new javax.swing.JTextField();
        filterPrice = new javax.swing.JTextField();
        filterAdd = new javax.swing.JButton();
        filterUpdate = new javax.swing.JButton();
        filterDelete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        fishComp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel14.setFont(new java.awt.Font("Rakoon Personal Use", 0, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("AquaScape");

        jLabel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("MASTER MODE");

        jButton4.setText("Log Out");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        messageLog.setEditable(false);
        messageLog.setColumns(20);
        messageLog.setRows(5);
        jScrollPane4.setViewportView(messageLog);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel15)
                .addGap(35, 35, 35)
                .addComponent(jButton4)
                .addGap(65, 65, 65)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        plants.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        plants.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Plants", "Maintenance", "Price"
            }
        ));
        plants.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                plantsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(plants);

        filters.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        filters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Model", "Capacity (Litres)", "Price"
            }
        ));
        filters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filtersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(filters);

        fishes.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        fishes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fish", "Water Req. (Gallons)", "Price"
            }
        ));
        fishes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fishesMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(fishes);

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Plants");

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Filters");

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Fishes");

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel19.setText("Name:");

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel20.setText("Requirements:");

        jLabel21.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel21.setText("Price");

        fishReq.setText("                Gallons");
        fishReq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fishReqMouseClicked(evt);
            }
        });

        fishAdd.setText("Add");
        fishAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fishAddActionPerformed(evt);
            }
        });

        fishUpdate.setText("Update");
        fishUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fishUpdateActionPerformed(evt);
            }
        });

        fishDelete.setText("Delete");
        fishDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fishDeleteActionPerformed(evt);
            }
        });

        jLabel22.setText("Name:");

        jLabel23.setText("Maintenance:");

        jLabel24.setText("Price:");

        plantAdd.setText("Add");
        plantAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plantAddActionPerformed(evt);
            }
        });

        plantUpdate.setText("Update");
        plantUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plantUpdateActionPerformed(evt);
            }
        });

        plantDelete.setText("Delete");
        plantDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plantDeleteActionPerformed(evt);
            }
        });

        plantMain.setText("         Low/Mid/High");
        plantMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                plantMainMouseClicked(evt);
            }
        });
        plantMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plantMainActionPerformed(evt);
            }
        });

        jLabel25.setText("Name:");

        jLabel26.setText("Capacity:");

        jLabel27.setText("Price:");

        filterName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterNameActionPerformed(evt);
            }
        });

        filterCapacity.setText("                   Litres");
        filterCapacity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterCapacityMouseClicked(evt);
            }
        });

        filterPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterPriceActionPerformed(evt);
            }
        });

        filterAdd.setText("Add");
        filterAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterAddActionPerformed(evt);
            }
        });

        filterUpdate.setText("Update");
        filterUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterUpdateActionPerformed(evt);
            }
        });

        filterDelete.setText("Delete");
        filterDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterDeleteActionPerformed(evt);
            }
        });

        jLabel2.setText("Not Compatible With");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jSeparator1)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel21)
                                                .addComponent(jLabel2))
                                            .addGap(202, 202, 202)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(fishComp, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(fishUpdate)
                                                .addGap(72, 72, 72)
                                                .addComponent(fishDelete))
                                            .addComponent(fishPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fishReq, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fishName, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(37, 37, 37)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel23)
                                            .addComponent(jLabel22)
                                            .addComponent(jLabel24))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(plantMain, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                            .addComponent(plantPrice)
                                            .addComponent(plantName)))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(plantAdd)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(plantUpdate)
                                            .addGap(64, 64, 64)
                                            .addComponent(plantDelete)
                                            .addGap(14, 14, 14))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(63, 63, 63)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel25)
                                            .addComponent(jLabel27)
                                            .addComponent(jLabel26))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(filterPrice, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(filterName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(filterCapacity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(filterAdd)
                                                .addGap(77, 77, 77)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addComponent(filterUpdate)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(filterDelete)))))))))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(fishAdd)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(546, 546, 546))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel17)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fishName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fishReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fishPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fishComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(plantName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(filterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel23)
                                    .addComponent(plantMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(filterCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(plantPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel27))
                                .addGap(26, 26, 26))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(filterPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24))
                                .addGap(32, 32, 32)))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fishAdd)
                            .addComponent(fishUpdate)
                            .addComponent(fishDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(plantUpdate)
                                .addComponent(plantAdd))
                            .addComponent(plantDelete)
                            .addComponent(filterAdd)
                            .addComponent(filterUpdate)
                            .addComponent(filterDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(91, 91, 91)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1495, 738));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void plantMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plantMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plantMainActionPerformed

    private void filterNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterNameActionPerformed

    private void filterPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterPriceActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        OpeningScreen os = new OpeningScreen();
        os.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void fishAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fishAddActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel tmodel = (DefaultTableModel) fishes.getModel();

        DbConnect db = new DbConnect();
        String query = "insert into fish (fish, water, price, compatibility) values('" 
                    + fishName.getText() + "','" + fishReq.getText() + "','" + fishPrice.getText() + "','"+ fishComp.getText() +"');";
        
        String showQuery = "select * from fish where fish='"+fishName.getText()+"'";
        
        //Angel,Cichlids,Discus,Oscar
        try {
            //Adding Entries
            messageLog.setText(" ");
            db.updateQuery(query);
            
            
            //Showing Entries after adding
            Object[] rowData = new Object[3];
            ArrayList result = new ArrayList();
            result=db.getFishResult(showQuery);
            int i=0;
            while(i<result.size()){
               rowData[0]=result.get(i++);
               rowData[1]=result.get(i++);
               rowData[2]=result.get(i++);
               tmodel.addRow(rowData);
            }
            
            //messageLog.setText("Entery Added!\nClick Refresh to see");
            
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fishAddActionPerformed

    private void fishUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fishUpdateActionPerformed
        // TODO add your handling code here:
        DbConnect db = new DbConnect();
        DefaultTableModel tmodel = (DefaultTableModel) fishes.getModel();

        String query = "UPDATE fish SET water = '"+ fishReq.getText() +"', price = '"+ fishPrice.getText() +"', compatibility = '"+fishComp.getText()+"' WHERE fish = '"+fishName.getText()+"';";
        
        System.out.println(query);
        try {
            db.updateQuery(query);
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tmodel.setValueAt(fishReq.getText(), fishes.getSelectedRow(), 1);
        tmodel.setValueAt(fishPrice.getText(), fishes.getSelectedRow(), 2);
 
    }//GEN-LAST:event_fishUpdateActionPerformed

    private void fishesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fishesMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel) fishes.getModel();
        DbConnect db = new DbConnect();
        String compt="";
        fishName.setText(tmodel.getValueAt(fishes.getSelectedRow(), 0).toString());
        
        String query = "Select compatibility from fish where fish='"+fishName.getText()+"';";
        
        System.out.println(query);
        
        try {
            compt=db.getCompResult(query);
            System.out.println(compt);
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        fishReq.setText(tmodel.getValueAt(fishes.getSelectedRow(), 1).toString());
        fishPrice.setText(tmodel.getValueAt(fishes.getSelectedRow(), 2).toString());
        fishComp.setText(compt);

    }//GEN-LAST:event_fishesMouseClicked

    private void fishDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fishDeleteActionPerformed
        DefaultTableModel tmodel = (DefaultTableModel) fishes.getModel();
        DbConnect db = new DbConnect();
        tmodel.removeRow(fishes.getSelectedRow());
        
        String query="Delete from fish where fish= '"+fishName.getText()+"';";
        try {
            db.updateQuery(query);
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_fishDeleteActionPerformed

    private void plantAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plantAddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel) plants.getModel();

        DbConnect db = new DbConnect();
        String query = "insert into plants (plant, maintenance, price) values('" 
                    + plantName.getText() + "','" + plantMain.getText() + "','" + plantPrice.getText() + "');";
        
        String showQuery = "select * from plants where plant='"+plantName.getText()+"'";
        
        try {
            //Adding Entries
            messageLog.setText(" ");
            db.updateQuery(query);
            
            
            //Showing Entries after adding
            Object[] rowData = new Object[3];
            ArrayList result = new ArrayList();
            result=db.getPlantResult(showQuery);
            int i=0;
            while(i<result.size()){
               rowData[0]=result.get(i++);
               rowData[1]=result.get(i++);
               rowData[2]=result.get(i++);
               tmodel.addRow(rowData);
            }
            
            //messageLog.setText("Entery Added!\nClick Refresh to see");
            
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_plantAddActionPerformed

    private void plantUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plantUpdateActionPerformed
        // TODO add your handling code here:
        DbConnect db = new DbConnect();
        DefaultTableModel tmodel = (DefaultTableModel) plants.getModel();

        String query = "UPDATE plants SET maintenance = '"+ plantMain.getText() +"', price = '"+ plantPrice.getText() +"' WHERE plant = '"+plantName.getText()+"';";
        
        System.out.println(query);
        try {
            db.updateQuery(query);
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tmodel.setValueAt(plantMain.getText(), plants.getSelectedRow(), 1);
        tmodel.setValueAt(plantPrice.getText(), plants.getSelectedRow(), 2);
        
    }//GEN-LAST:event_plantUpdateActionPerformed

    private void plantDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plantDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel) plants.getModel();
        DbConnect db = new DbConnect();
        tmodel.removeRow(plants.getSelectedRow());
        
        String query="Delete from plants where plant= '"+plantName.getText()+"';";
        try {
            db.updateQuery(query);
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_plantDeleteActionPerformed

    private void plantsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plantsMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel) plants.getModel();
        DbConnect db = new DbConnect();
        String compt="";
        plantName.setText(tmodel.getValueAt(plants.getSelectedRow(), 0).toString());
        
        plantMain.setText(tmodel.getValueAt(plants.getSelectedRow(), 1).toString());
        plantPrice.setText(tmodel.getValueAt(plants.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_plantsMouseClicked

    private void filterAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterAddActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel) filters.getModel();

        DbConnect db = new DbConnect();
        String query = "insert into filters (model, capacity, price) values('" 
                    + filterName.getText() + "','" + filterCapacity.getText() + "','" + filterPrice.getText() + "');";
        
        String showQuery = "select * from filters where model='"+filterName.getText()+"'";
        try {
            //Adding Entries
            messageLog.setText(" ");
            db.updateQuery(query);
            
            
            //Showing Entries after adding
            Object[] rowData = new Object[3];
            ArrayList result = new ArrayList();
            result=db.getFilterResult(showQuery);
            int i=0;
            while(i<result.size()){
               rowData[0]=result.get(i++);
               rowData[1]=result.get(i++);
               rowData[2]=result.get(i++);
               tmodel.addRow(rowData);
            }
            
            //messageLog.setText("Entery Added!\nClick Refresh to see");
            
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_filterAddActionPerformed

    private void filterUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterUpdateActionPerformed
        // TODO add your handling code here:
        DbConnect db = new DbConnect();
        DefaultTableModel tmodel = (DefaultTableModel) filters.getModel();

        String query = "UPDATE filters SET capacity = '"+ filterCapacity.getText() +"', price = '"+ filterPrice.getText() +"' WHERE model = '"+filterName.getText()+"';";
        
        System.out.println(query);
        try {
            db.updateQuery(query);
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       tmodel.setValueAt(filterCapacity.getText(), filters.getSelectedRow(), 1);
       tmodel.setValueAt(filterPrice.getText(), filters.getSelectedRow(), 2);
    }//GEN-LAST:event_filterUpdateActionPerformed

    private void filterDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel) filters.getModel();
        DbConnect db = new DbConnect();
        tmodel.removeRow(filters.getSelectedRow());
        
        String query="Delete from filters where model= '"+filterName.getText()+"';";
        try {
            db.updateQuery(query);
        } catch (SQLException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_filterDeleteActionPerformed

    private void filtersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filtersMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel) filters.getModel();
        DbConnect db = new DbConnect();
        String compt="";
        filterName.setText(tmodel.getValueAt(filters.getSelectedRow(), 0).toString());
        
        filterCapacity.setText(tmodel.getValueAt(filters.getSelectedRow(), 1).toString());
        filterPrice.setText(tmodel.getValueAt(filters.getSelectedRow(), 2).toString());
    }//GEN-LAST:event_filtersMouseClicked

    private void fishReqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fishReqMouseClicked
        // TODO add your handling code here:
        fishReq.setText("");
    }//GEN-LAST:event_fishReqMouseClicked

    private void plantMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_plantMainMouseClicked
        // TODO add your handling code here:
        plantMain.setText("");
    }//GEN-LAST:event_plantMainMouseClicked

    private void filterCapacityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterCapacityMouseClicked
        // TODO add your handling code here:
        filterCapacity.setText("");
    }//GEN-LAST:event_filterCapacityMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton filterAdd;
    private javax.swing.JTextField filterCapacity;
    private javax.swing.JButton filterDelete;
    private javax.swing.JTextField filterName;
    private javax.swing.JTextField filterPrice;
    private javax.swing.JButton filterUpdate;
    private javax.swing.JTable filters;
    private javax.swing.JButton fishAdd;
    private javax.swing.JTextField fishComp;
    private javax.swing.JButton fishDelete;
    private javax.swing.JTextField fishName;
    private javax.swing.JTextField fishPrice;
    private javax.swing.JTextField fishReq;
    private javax.swing.JButton fishUpdate;
    private javax.swing.JTable fishes;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea messageLog;
    private javax.swing.JButton plantAdd;
    private javax.swing.JButton plantDelete;
    private javax.swing.JTextField plantMain;
    private javax.swing.JTextField plantName;
    private javax.swing.JTextField plantPrice;
    private javax.swing.JButton plantUpdate;
    private javax.swing.JTable plants;
    // End of variables declaration//GEN-END:variables
}
